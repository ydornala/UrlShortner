{"version":3,"sources":["index.js"],"names":["express","require","mongoose","config","bodyParser","cookieParser","SERVE_HOSTNAME","SERVE_PORT","cookieSession","v4","uuid","set","connect","mongo","uri","useNewUrlParser","then","console","log","catch","err","app","use","passport","initialize","json","urlencoded","extended","name","keys","process","env","SESHSECRET","maxAge","req","res","next","session","id","header","default","listen"],"mappings":";;;;AAAA;;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,sBAAD,CAAtB;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMI,YAAY,GAAGJ,OAAO,CAAC,eAAD,CAA5B;;AAEA,IAAM;AAAEK,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,IAAiCN,OAAO,CAAC,oBAAD,CAA9C;;AACA,IAAMO,aAAa,GAAGP,OAAO,CAAC,gBAAD,CAA7B;;AACA,IAAM;AAAEQ,EAAAA,EAAE,EAAEC;AAAN,IAAeT,OAAO,CAAC,MAAD,CAA5B,C,CACA;AACA;AACA;;;AAEAC,QAAQ,CAACS,GAAT,CAAa,iBAAb,EAAgC,IAAhC;AACAT,QAAQ,CAACS,GAAT,CAAa,kBAAb,EAAiC,KAAjC;AAEAT,QAAQ,CACLU,OADH,CAEIT,MAAM,CAACU,KAAP,CAAaC,GAFjB,EAGI;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAHJ,EAKGC,IALH,CAKQ,MAAMC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CALd,EAMGC,KANH,CAMSC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CE,GAA5C,CANhB;AAQA,IAAMC,GAAG,GAAGrB,OAAO,EAAnB;AAEAqB,GAAG,CAACC,GAAJ,CAAQjB,YAAY,EAApB;AACAgB,GAAG,CAACC,GAAJ,CAAQC,kBAASC,UAAT,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQlB,UAAU,CAACqB,IAAX,EAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQlB,UAAU,CAACsB,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEAN,GAAG,CAACC,GAAJ,CAAQd,aAAa,CAAC;AACpBoB,EAAAA,IAAI,EAAE,YADc;AAEpBC,EAAAA,IAAI,EAAE,CAACC,OAAO,CAACC,GAAR,CAAYC,UAAb,CAFc;AAGpBC,EAAAA,MAAM,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,EAAf,GAAoB,IAHR,CAGa;;AAHb,CAAD,CAArB;AAOAZ,GAAG,CAACC,GAAJ,CAAQ,UAASY,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BF,EAAAA,GAAG,CAACG,OAAJ,CAAYC,EAAZ,GAAkBJ,GAAG,CAACG,OAAJ,CAAYC,EAAZ,IAAkB5B,IAAI,EAAxC;AACAyB,EAAAA,GAAG,CAACI,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAH,EAAAA,IAAI,GAH2B,CAGvB;AACT,CAJD;AAMAf,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAarB,OAAO,CAAC,YAAD,CAApB;AACAoB,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBrB,OAAO,CAAC,aAAD,CAA7B;AACAoB,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBrB,OAAO,CAAC,QAAD,CAAP,CAAkBuC,OAAnC;AAEAnB,GAAG,CAACoB,MAAJ,CACElC,UADF,EAEED,cAFF,EAGE,MAAKW,OAAO,CAACC,GAAR,2CAA+CZ,cAA/C,cAAiEC,UAAjE,OAHP","sourcesContent":["import passport from 'passport';\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst config = require('./config/environment');\nconst bodyParser = require('body-parser');\nconst cookieParser = require('cookie-parser');\n\nconst { SERVE_HOSTNAME, SERVE_PORT } = require('../src/config.json');\nconst cookieSession = require('cookie-session');\nconst { v4: uuid } = require('uuid')\n// require('dotenv-safe').config({\n//   allowEmptyValues: true\n// });\n\nmongoose.set('useNewUrlParser', true);\nmongoose.set('useFindAndModify', false);\n\nmongoose\n  .connect(\n    config.mongo.uri,\n    { useNewUrlParser: true }\n  )\n  .then(() => console.log('Connected to MongoDB'))\n  .catch(err => console.log('Failed to connect to MongoDB', err));\n\nconst app = express();\n\napp.use(cookieParser());\napp.use(passport.initialize());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\napp.use(cookieSession({\n  name: 'shortlinks',\n  keys: [process.env.SESHSECRET],\n  maxAge: 30 * 24 * 60 * 60 * 1000 // 30 days\n}))\n\n\napp.use(function(req, res, next) {\n  req.session.id = (req.session.id || uuid());\n  res.header('Access-Control-Allow-Origin', '*');\n  next(); // pass control to the next handler\n});\n\napp.use('/', require('./api/Code'));\napp.use('/api/links', require('./api/Links'));\napp.use('/auth', require('./auth').default);\n\napp.listen(\n  SERVE_PORT, \n  SERVE_HOSTNAME,\n  ()=> console.log(`Shortlinks backend listening on ${SERVE_HOSTNAME}:${SERVE_PORT}!`)\n)"],"file":"index.js"}